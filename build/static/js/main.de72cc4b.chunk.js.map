{"version":3,"sources":["components/functionAuth.js","components/Post.jsx","components/Gallery.jsx","components/Home.jsx","components/NotFound.jsx","components/UploadPage.jsx","components/Comments.jsx","components/SignUp.jsx","components/Login.jsx","components/custom-button/custom-button.component.jsx","components/Profile.jsx","components/feed/Feed.jsx","App.js","serviceWorker.js","index.js"],"names":["checkAuth","props","a","dateNow","Date","localStorage","usertoken","window","location","href","swal","title","icon","button","console","log","token","getItem","decode","decodedToken","exp","getTime","setItem","then","checkTokenExpired","Post","state","img","post","post_image","post_title","id","_id","likes","post_likes","desc","post_desc","comments","post_comments","length","owner","post_owner","nickname","user_id","userLiked","getUserLiked","axios","get","likedPosts","setState","data","handleLikeButton","result","catch","err","liked","forEach","element","filter","elem","push","this","find","className","onClick","history","src","e","reload","React","Component","withRouter","Gallery","allGallery","allPosts","map","Col","indexOf","sm","Container","Row","Home","getBGS","Helmet","NotFound","UploadPage","useHistory","useState","setTitle","setDesc","image","setImage","url","setUrl","useEffect","error","M","toast","html","classes","style","margin","maxWidth","padding","textAlign","type","placeholder","value","onChange","target","maxLength","color","accept","files","size","text","maxSize","FormData","append","process","postDetails","fontSize","Comments","comment","sender","handleChange","handleSendButton","refs","inputField","FormControl","aria-describedby","ref","onKeyDown","keyCode","bordered","reverse","width","open","backgroundImage","SignUp","initialValues","email","password","confirmPassword","validationSchema","Yup","shape","required","min","matches","oneOf","onSubmit","fields","addDataToState","newUser","registered","res","render","errors","touched","status","Card","height","Body","Title","htmlFor","name","component","message","Login","user","isAuthenticated","to","CustomButton","children","signInWithGoogle","inverted","otherProps","Profile","total_likes","total_comments","disabled","handleUserInfo","handleSavePassword","test","put","msg","removeItem","Feed","userUploaded","handleDelete","post_id","delete","handleUserLiked","handleUserUploaded","uploadedPosts","position","App","handleClick","showConfirmButton","timer","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","as","Button","exact","path","match","params","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de72cc4b.chunk.js","sourcesContent":["import axios from \"axios\";\nimport decode from \"jwt-decode\";\nimport swal from \"sweetalert\";\n\nexport const register = (newUser) => {\n  return axios\n    .post(\"/api/v1/users/register\", newUser)\n    .then((res) => {\n      return res;\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const login = (user) => {\n  return axios\n    .post(\"/api/v1/users/login\", user)\n    .then(async (res) => {\n      localStorage.setItem(\"usertoken\", res.data.token);\n      const decodedToken = await decode(res.data.token);\n      localStorage.setItem(\"user_id\", decodedToken.id);\n      localStorage.setItem(\"user_nickname\", decodedToken.nickname);\n      return res.data.token;\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const checkAuth = async (props) => {\n  var dateNow = new Date();\n  if (!localStorage.usertoken) {\n    window.location.href = \"/login\";\n    swal({\n      title: \"You Need To Login First\",\n      icon: \"warning\",\n      button: \"ok\",\n    });\n    console.log(\"offline\");\n  } else {\n    const token = localStorage.getItem(\"usertoken\");\n    var decodedToken = await decode(token);\n    var exp = decodedToken.exp;\n    if (exp < dateNow.getTime() / 1000) {\n      localStorage.setItem(\"usertoken\", \"\");\n      swal({\n        title: \"You Need To sign in\",\n        icon: \"warning\",\n        button: \"ok\",\n      }).then(() => {\n        window.location.href = \"/login\";\n      });\n    }\n  }\n};\n\nexport const getUserData = async () => {\n  const uid = localStorage.getItem(\"user_id\");\n  if (uid) {\n    axios\n      .get(`/api/v1/users/${uid}`)\n      .then((user) => {\n        console.log(user.data);\n        return user.data;\n      })\n      .catch((err) => console.log(err));\n  }\n};\n\nexport const checkTokenExpired = async () => {\n  var dateNow = new Date();\n\n  if (localStorage.getItem(\"usertoken\")) {\n    const token = localStorage.getItem(\"usertoken\");\n    var decodedToken = await decode(token);\n    var exp = decodedToken.exp;\n    if (exp < dateNow.getTime() / 1000) {\n      localStorage.setItem(\"usertoken\", \"\");\n      swal({\n        title: \"You Need To sign in\",\n        icon: \"warning\",\n        button: \"ok\",\n      }).then(() => {\n        window.location.href = \"/login\";\n      });\n    }\n  }\n};\n","import React from \"react\";\nimport { Col, Row, Container, Card, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { checkAuth } from \"./functionAuth\";\nimport { withRouter } from \"react-router\";\n\nimport \"./post.style.scss\";\n\nclass Post extends React.Component {\n  state = {\n    img: this.props.post.post_image,\n    title: this.props.post.post_title,\n    id: this.props.post._id,\n    likes: this.props.post.post_likes,\n    desc: this.props.post.post_desc,\n    comments: this.props.post.post_comments.length,\n    owner: this.props.post.post_owner.nickname,\n    user_id: localStorage.getItem(\"user_id\"),\n    userLiked: [],\n  };\n\n\n  getUserLiked = () => {\n    axios\n      .get(`/api/v1/users/${localStorage.getItem(\"user_id\")}/likedposts`)\n      .then((likedPosts) => {\n        this.setState({ userLiked: likedPosts.data });\n      });\n  };\n\n  handleLikeButton = () => {\n    if (localStorage.getItem(\"user_id\")) {\n      axios\n        .post(`/api/v1/posts/like/${this.state.id}`, { user_id: this.state.user_id })\n        .then((result) => {\n          this.setState({ likes: result.data.post.post_likes });\n        })\n        .catch((err) => console.log(err));\n    }\n    //remove\n    let liked = false;\n    this.state.userLiked.forEach((element) => {\n      if (this.state.id == element._id) {\n        liked = true;\n      }\n    });\n    // if its not liked\n    if (!liked) {\n      // add like\n      this.state.userLiked.push(this.props.post);\n    } else {\n      // remove like\n      this.state.userLiked = this.state.userLiked.filter(\n        (elem) => this.state.id != elem._id\n      );\n    }\n\n    // if (this.props.history.location.pathname === \"/myfeed\") {\n    //   window.location.reload(true);\n    // }\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(\"usertoken\")) {\n      this.getUserLiked();\n    }\n    if (this.state.userLiked.find((post) => post._id == this.state.id)) {\n      this.setState({ liked: true });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"item\" id={`card_${this.state.id}`}>\n          <img\n            className=\"item-img\"\n            onClick={() =>\n              this.props.history.push(\"/comments/\" + this.state.id)\n            }\n            id={`img_${this.state.id}`}\n            src={this.state.img}\n          />\n          <span id={`title_${this.state.id}`} className=\"item-title\">\n            {this.state.title}\n          </span>\n\n          <div className=\"item-footer\">\n            <span className=\"item-supTitle\" id={`desc_${this.state.id}`}>\n              {this.state.desc}\n            </span>\n\n            <div className=\"item-buttons\">\n              <button\n                className=\"item-button\"\n                id={`like_btn_${this.state.id}`}\n                onClick={(e) => {\n                  checkAuth();\n                  this.handleLikeButton();\n                  window.location.reload(true);\n\n                }}\n              >\n                {this.state.userLiked.find((post) => post._id == this.state.id)\n                  ? \"❤️\"\n                  : \"🤍\"}\n                {this.state.likes}\n              </button>\n\n              <button\n                className=\"item-button\"\n                onClick={() =>\n                  this.props.history.push(\"/comments/\" + this.state.id)\n                }\n                id={`comment_btn_${this.state.id}`}\n              >\n                💭{this.state.comments}\n              </button>\n              <button className=\"item-button\" id={`owner_btn_${this.state.id}`}>\n                📷{this.state.owner}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(Post);\n","import { Col, Row, Container } from \"react-bootstrap\";\nimport Post from \"./Post\";\nimport React, { Component } from \"react\";\nexport default class Gallery extends Component {\n  render() {\n    let allGallery = this.props.allPosts.map((post) => (\n      <Col\n        id={`post_${this.props.allPosts.indexOf(post)}`}\n        sm={4}\n        className=\"mb-3\"\n      >\n        <Post post={post} />\n      </Col>\n    ));\n    return (\n      <div className=\"mt-5 mb-5\">\n        <Container>\n          <Row>{allGallery}</Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import Gallery from \"./Gallery\";\nimport { Helmet } from \"react-helmet\";\nimport React, { Component } from \"react\";\nimport { checkTokenExpired } from \"./functionAuth\";\nimport axios from \"axios\";\n\nexport default class Home extends Component {\n  state = {\n    allPosts: [],\n  };\n\n  getBGS = () => {\n    axios\n      .get(\"/api/v1/posts\")\n      .then((result) => this.setState({ allPosts: result.data }))\n      .catch((err) => console.log(err));\n  };\n\n  componentDidMount() {\n    this.getBGS();\n  }\n\n  render() {\n    checkTokenExpired();\n    return (\n      <div>\n        <Helmet>\n          <title>{\"WhichBG? - Home\"}</title>\n        </Helmet>\n        <Gallery allPosts={this.state.allPosts} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./NotFound.css\";\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div className=\"bla\">\n          <h1>Whoops</h1>\n          <p>Something Went Wrong</p>\n     \n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport M from \"materialize-css\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { checkAuth } from \"./functionAuth\";\nimport swal from \"sweetalert\";\nimport { Helmet } from \"react-helmet\";\n\nconst UploadPage = (props) => {\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  useEffect(() => {\n    if (url) {\n      axios\n        .post(\"/api/v1/posts/newpost\", {\n          post_title: title,\n          post_desc: desc,\n          post_image: url,\n          post_owner: localStorage.getItem(\"user_id\"),\n        })\n        .then((data) => {\n          if (data.error) {\n            M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\n          } else {\n            M.toast({\n              html: \"Created post Successfully\",\n              classes: \"#43a047 green darken-1\",\n            });\n            history.push(\"/\");\n            window.location.reload(true);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [url]);\n\n  const postDetails = () => {\n    if (title && desc && image) {\n      const data = new FormData();\n      data.append(\"file\", image);\n      data.append(\"upload_preset\", process.env.REACT_APP_UPLOAD_PRESET);\n      data.append(\"cloud_name\", process.env.REACT_APP_CLOUD_NAME);\n      axios\n        .post(process.env.REACT_APP_CLOUDINARY_API, data)\n        .then((data) => {\n          setUrl(data.data.url);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      swal({\n        title: \"No!\",\n        text: \"All Fields Must Be Filled\",\n        icon: \"error\",\n        button: \"ok\",\n      });\n    }\n  };\n  checkAuth();\n  return (\n    <div\n      className=\"card input-filed\"\n      style={{\n        margin: \"30px auto\",\n        maxWidth: \"500px\",\n        padding: \"20px\",\n        textAlign: \"center\",\n      }}\n      id=\"upload_card\"\n    >\n      <Helmet>\n        <title>{\"WhichBG? - Upload\"}</title>\n      </Helmet>\n      <input\n        type=\"text\"\n        placeholder=\"title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        id=\"upload_title\"\n        maxLength=\"20\"\n      />\n      <input\n        type=\"text\"\n        placeholder=\"description\"\n        value={desc}\n        onChange={(e) => setDesc(e.target.value)}\n        id=\"upload_desc\"\n        maxLength=\"55\"\n      />\n      <div className=\"file-field input-field\">\n        <div className=\"btn #64b5f6 blue darken-1\">\n          <span style={{ color: \"white\" }}>Uplaod Image</span>\n          <input\n            id=\"upload_selectimage\"\n            type=\"file\"\n            accept=\".gif,.jpg,.jpeg,.png\"\n            onChange={(e) => {\n              if (e.target.files[0].size > 2097152) {\n                swal({\n                  title: \"No!\",\n                  text: \"Image is larger than 2mb\",\n                  icon: \"error\",\n                  button: \"sorry\",\n                });\n              } else {\n                setImage(e.target.files[0]);\n              }\n            }}\n            maxSize={2097152}\n          />\n        </div>\n\n        <div className=\"file-path-wrapper\">\n          <input className=\"file-path validate\" type=\"text\" />\n        </div>\n      </div>\n      <button\n        id=\"upload_submit\"\n        style={{ color: \"white\" }}\n        className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n        onClick={() => postDetails()}\n      >\n        Submit post\n      </button>\n      <div>\n        <p style={{ color: \"red\", fontSize: \"12px\" }}>\n          2mb max size , only following formats (gif,jpg,jpeg,png)\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default UploadPage;\n","import React, { Component } from \"react\";\nimport { checkAuth } from \"./functionAuth\";\nimport moment from \"moment\";\nimport { Helmet } from \"react-helmet\";\nimport \"./Comments.styles.scss\";\n\nimport {\n  Col,\n  Table,\n  InputGroup,\n  Card,\n  Button,\n  FormControl,\n  Container,\n  Row,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\n\nexport default class Comments extends Component {\n  state = {\n    img: this.props.post.post_image,\n    title: this.props.post.post_title,\n    id: this.props.post._id,\n    likes: this.props.post.post_likes,\n    desc: this.props.post.post_desc,\n    comments: this.props.post.post_comments,\n    comment: \"\",\n    sender: localStorage.getItem(\"user_nickname\"),\n    user_id: localStorage.getItem(\"user_id\"),\n  };\n\n  handleChange = (e) => {\n    this.setState({ comment: e.target.value });\n  };\n  handleSendButton = () => {\n    axios\n      .post(`/api/v1/posts/newcomment/${this.state.id}`, {\n        user_id: this.state.user_id,\n        comment: this.state.comment,\n        sender: this.state.sender,\n      })\n      .then((result) => {\n        this.refs.inputField.value = \"\";\n        this.setState({ comments: result.data.post.post_comments });\n      })\n      .catch((err) => console.log(err));\n  };\n  render() {\n    checkAuth();\n    return (\n      <div className=\"comment-continer\">\n        <Helmet>\n          <title>{`WhichBG? - ${this.state.title} Comments`}</title>\n        </Helmet>\n\n        <h1 className=\"comment-title\">Write Something About The Picture</h1>\n        <div className=\"comment\">\n          <div className=\"test\">\n            <FormControl\n              className=\"comment-form\"\n              id=\"typing_area\"\n              placeholder=\"Write here , max chars 120 , click enter to send...\"\n              aria-describedby=\"basic-addon2\"\n              onChange={this.handleChange}\n              ref=\"inputField\"\n              maxLength=\"120\"\n              onKeyDown={(e) => {\n                if (e.keyCode == 13) this.handleSendButton();\n              }}\n            />\n            <table className=\"comment-table\" bordered id=\"comments_table\">\n              {this.state.comments.reverse().map((comment) => (\n                <tr style={{ textAlign: \"left\" }}>\n                  <td\n                    id={`sender_name_${this.state.comments.indexOf(comment)}`}\n                    style={{ width: \"10px\" }}\n                  >\n                    {comment.sender}\n                  </td>\n                  <td id={`comment_${this.state.comments.indexOf(comment)}`}>\n                    {comment.comment}\n                  </td>\n                </tr>\n              ))}\n            </table>\n          </div>\n\n          <div\n            className=\"backgroundImage\"\n            onClick={() => {\n              window.open(this.state.img);\n            }}\n            style={{ backgroundImage: `url(${this.props.post.post_image})` }}\n          />\n        </div>\n        <img />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { register } from \"./functionAuth\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { Avatar } from \"antd\";\nimport { Helmet } from \"react-helmet\";\n\nexport default class SignUp extends Component {\n  state = {\n    data: {},\n  };\n\n  addDataToState(data) {\n    this.setState({ data: data });\n  }\n\n  render() {\n    if (!this.state) {\n      return null;\n    }\n    return (\n      <div>\n        <Helmet>\n          <title>{\"WhichBG? - SignUp\"}</title>\n        </Helmet>\n        <br />\n        <br />\n        <Formik\n          initialValues={{\n            nickname: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n          }}\n          validationSchema={Yup.object().shape({\n            nickname: Yup.string().required(\"Nickname is required\"),\n            email: Yup.string()\n              .email(\"Email is invalid\")\n              .required(\"Email is required\"),\n            password: Yup.string()\n              .min(8, \"Password must be at least 8 numbers\")\n              .matches(/[a-z]/, 'at least one lowercase char')\n              .matches(/[A-Z]/, 'at least one uppercase char')\n              .matches(/[a-zA-Z]+[^a-zA-Z\\s]+/, 'at least 1 number or special char (@,!,#, etc).')\n              .required(\"Password is required\"),\n            confirmPassword: Yup.string()\n              .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n              .required(\"Confirm Password is required\"),\n          })}\n          onSubmit={(fields) => {\n            this.addDataToState(fields);\n            const registered = {\n              nickname: this.state.data.nickname,\n              email: this.state.data.email,\n              password: this.state.data.password,\n            };\n            register(registered)\n              .then((res) => {\n                if (res) {\n                  swal({\n                    title: \"Your successfully Registered\",\n                    text: \"Welcome On Board\",\n                    icon: \"success\",\n                    button: \"ok\",\n                  }).then(() => {\n                    this.props.history.push(\"/login\");\n                  });\n                } else {\n                  swal({\n                    title: \"Check your fields\",\n                    text: \"something is not correct\",\n                    icon: \"error\",\n                    button: \"ok\",\n                  });\n                }\n              })\n              .catch((err) => {\n                console.log(err);\n              });\n          }}\n          render={({ errors, status, touched }) => (\n            <Row className=\"justify-content-md-center\">\n              <Card\n                style={{ width: \"27rem\", height: \"33rem\" }}\n                id=\"signup_card\"\n              >\n                <Card.Body>\n                  <Card.Title id=\"signup_title\">Registeration Form </Card.Title>\n                  <Form>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"nickname\">Nickname</label>\n                      <Field\n                        name=\"nickname\"\n                        type=\"text\"\n                        className={\n                          \"form-control\" +\n                          (errors.nickname && touched.nickname\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                        id=\"signup_nickname\"\n                      />\n                      <ErrorMessage\n                        name=\"nickname\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                        id=\"signup_nickname_err\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">Email</label>\n                      <Field\n                        name=\"email\"\n                        type=\"text\"\n                        className={\n                          \"form-control\" +\n                          (errors.email && touched.email ? \" is-invalid\" : \"\")\n                        }\n                        id=\"signup_email\"\n                      />\n                      <ErrorMessage\n                        name=\"email\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                        id=\"signup_email_err\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"password\">Password</label>\n                      <Field\n                        name=\"password\"\n                        type=\"password\"\n                        className={\n                          \"form-control\" +\n                          (errors.password && touched.password\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                        id=\"signup_password\"\n                      />\n                      <ErrorMessage\n                        name=\"password\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                        id=\"signup_password_err\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                      <Field\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        className={\n                          \"form-control\" +\n                          (errors.confirmPassword && touched.confirmPassword\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                        id=\"signup_confirm_password\"\n                      />\n                      <ErrorMessage\n                        name=\"confirmPassword\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                        id=\"signup_confirm_password_err\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <button\n                        id=\"signup_submit\"\n                        type=\"submit\"\n                        className=\"btn btn-primary mr-2\"\n                      >\n                        Register\n                      </button>\n                      <button\n                        id=\"signup_reset\"\n                        type=\"reset\"\n                        className=\"btn btn-secondary\"\n                      >\n                        Reset\n                      </button>\n                    </div>\n                  </Form>\n                </Card.Body>\n              </Card>\n            </Row>\n          )}\n        />\n        <h4> {this.state.message}</h4>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { login } from \"../components/functionAuth\";\nimport swal from \"sweetalert\";\nimport { Helmet } from \"react-helmet\";\n\nexport default class Login extends Component {\n  state = {\n    data: {},\n    user: \"\",\n    message: \"\",\n    isAuthenticated: false,\n  };\n\n  addDataToState(data) {\n    this.setState({ data: data });\n    login(this.state.data)\n      .then((res) => {\n        if (res) {\n          swal({\n            title: \"Your successfully logged in\",\n            text: `Welcome Back ${localStorage.getItem(\"user_nickname\")}`,\n            icon: \"success\",\n            button: \"ok\",\n          }).then(() => {\n            this.props.history.push(\"/\");\n            window.location.reload(true);\n          });\n        } else {\n          swal({\n            title: \"Check your credintials\",\n            text: \"either your username or password is wrong\",\n            icon: \"error\",\n            button: \"ok\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  render() {\n    return (\n      <div>\n        <Helmet>\n          <title>{\"WhichBG? - Login\"}</title>\n        </Helmet>\n        <br />\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Card style={{ width: '27rem',height: '30rem' }} id=\"login_card\">\n            <Card.Body>\n              <Card.Title id=\"login_title\">Login Form</Card.Title>\n              <Formik\n                initialValues={{\n                  email: \"\",\n                  password: \"\",\n                }}\n                validationSchema={Yup.object().shape({\n                  email: Yup.string()\n                    .email(\"Email is invalid\")\n                    .required(\"Email is required\"),\n                  password: Yup.string()\n                    .min(8, \"Password must be at least 8 numbers\")\n                    .matches(/[a-z]/, 'at least one lowercase char')\n                    .matches(/[A-Z]/, 'at least one uppercase char')\n                    .matches(/[a-zA-Z]+[^a-zA-Z\\s]+/, 'at least 1 number or special char (@,!,#, etc).')\n                })}\n                onSubmit={(fields) => {\n                  this.addDataToState(fields);\n                }}\n                render={({ errors, status, touched }) => (\n                  <Form>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">Email</label>\n                      <Field\n                        name=\"email\"\n                        type=\"text\"\n                        className={\n                          \"form-control\" +\n                          (errors.email && touched.email ? \" is-invalid\" : \"\")\n                        }\n                        id=\"login_email\"\n                      />\n                      <ErrorMessage\n                        name=\"email\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                        id=\"login_email_err\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"password\">Password</label>\n                      <Field\n                        name=\"password\"\n                        type=\"password\"\n                        className={\n                          \"form-control\" +\n                          (errors.password && touched.password\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                        id=\"login_password\"\n                      />\n                      <ErrorMessage\n                        name=\"password\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                        id=\"login_password_err\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <button id=\"login_submit\" type=\"submit\" className=\"btn btn-primary mr-2\">\n                        Login\n                      </button>\n                    </div>\n                  </Form>\n                )}\n              />\n              <Link to=\"/signup\" id=\"login_signup\">Don't have accoun? Signup</Link>\n            </Card.Body>\n          </Card>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./custom-button.styles.scss\";\nconst CustomButton = ({\n  children,\n  signInWithGoogle,\n  inverted,\n  ...otherProps\n}) => (\n  <button\n    className={` ${inverted ? \"inverted\" : \"\"}  ${\n      signInWithGoogle ? \"google-signin\" : \"\"\n    } custom-button`}\n    {...otherProps}\n  >\n    {children}\n  </button>\n);\n\nexport default CustomButton;\n","import React from \"react\";\nimport \"./Profile.styles.scss\";\nimport CustomButton from \"./custom-button/custom-button.component\";\nimport { Helmet } from \"react-helmet\";\nimport { checkAuth } from \"./functionAuth\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\n\nclass Profile extends React.Component {\n  state = {\n    user_id: localStorage.getItem(\"user_id\"),\n    nickname: \"\",\n    total_likes: \"\",\n    total_comments: \"\",\n    email: \"\",\n    disabled: true,\n  };\n\n  handleUserInfo = () => {\n    axios.get(`/api/v1/users/${this.state.user_id}`).then((result) => {\n      if (result) {\n        this.setState({\n          nickname: result.data.nickname,\n          total_comments: result.data.total_comments,\n          total_likes: result.data.total_likes,\n          email: result.data.email,\n        });\n      }\n    });\n  };\n\n  handleSavePassword = () => {\n    if (\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(\n        this.state.password\n      )\n    ) {\n      axios\n        .put(`/api/v1/users/editpassword/${this.state.user_id}`, {\n          password: this.state.password,\n        })\n        .then((result) => {\n          if (result.data.msg == \"password edited successfully\") {\n            localStorage.removeItem(\"usertoken\");\n            localStorage.removeItem(\"user_id\");\n            localStorage.removeItem(\"user_nickname\");\n            swal({\n              title: \"Password Changed Successfully\",\n              text: `You need to loging again with the new password`,\n              icon: \"success\",\n              button: \"ok\",\n            }).then(() => {\n              window.location.href = \"/login\";\n            });\n          }\n        });\n    } else {\n      swal({\n        title: \"Password Formation not correct\",\n        text: `8 chars , at least 1 small letter , 1 capital , 1 number , 1 special char`,\n        icon: \"error\",\n        button: \"ok\",\n      });\n    }\n  };\n  componentDidMount() {\n    this.handleUserInfo();\n  }\n\n  render() {\n    checkAuth();\n    return (\n      <div className=\"profile\">\n        <Helmet>\n          <title>{\"WhichBG? - Profile\"}</title>\n        </Helmet>\n        <h1 className=\"myProfile\">Personal Information</h1>\n        <span className=\"profile-name\">\n          <span>Email :</span>\n          <span id=\"email_value\">{this.state.email}</span>\n        </span>\n        <span className=\"profile-name\">\n          <span>Nickname :</span>\n          <span id=\"nickname_value\">{this.state.nickname}</span>\n        </span>\n        <span className=\"profile-name\">\n          <span>Total Likes :</span>\n          <span id=\"total_likes_value\">{this.state.total_likes}</span>\n        </span>\n        <span className=\"profile-name\">\n          <span>Total Comments :</span>\n          <span id=\"total_comments_value\">{this.state.total_comments}</span>\n        </span>\n        <span className=\"profile-name\">\n          <span>Password :</span>\n          <input\n            id=\"password_input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"click edit to enable typing , then click save to save new password\"\n            disabled={this.state.disabled}\n            onChange={(e) => {\n              this.setState({\n                password: e.target.value,\n              });\n            }}\n          />\n        </span>\n        <div className=\"profile-button\">\n          <CustomButton\n            id=\"edit_password_btn\"\n            inverted\n            onClick={() => {\n              this.setState({ disabled: !this.state.disabled });\n            }}\n          >\n            Edit Password\n          </CustomButton>\n          <CustomButton\n            id=\"save_password_btn\"\n            inverted\n            onClick={this.handleSavePassword}\n          >\n            Save Password\n          </CustomButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React from \"react\";\nimport Post from \"../Post\";\nimport \"./feed.styles.scss\";\nimport axios from \"axios\";\nimport { Helmet } from \"react-helmet\";\nimport swal from \"sweetalert\";\nimport { checkAuth } from \"../functionAuth\";\n\nclass Feed extends React.Component {\n  state = {\n    userLiked: [],\n    userUploaded: [],\n    user_id: localStorage.getItem(\"user_id\"),\n  };\n\n  handleDelete = (post_id) => {\n    axios.delete(`/api/v1/posts/${post_id}`).then((result) => {\n      if (result.data.msg == \"deleted successfully\") {\n        swal({\n          title: \"Successfully Deleted\",\n          text: `😔`,\n          icon: \"success\",\n          button: \"ok\",\n        }).then(() => {\n          window.location.reload(true);\n        });\n      }\n    });\n  };\n\n  handleUserLiked = () => {\n    axios.get(`/api/v1/users/${this.state.user_id}/likedposts`).then((likedPosts) => {\n      this.setState({ userLiked: likedPosts.data });\n    });\n  };\n\n  handleUserUploaded = () => {\n    axios\n      .get(`/api/v1/users/${this.state.user_id}/uploadedposts`)\n      .then((uploadedPosts) => {\n        console.log(uploadedPosts);\n\n        this.setState({ userUploaded: uploadedPosts.data });\n      });\n  };\n\n  componentDidMount() {\n    this.handleUserLiked();\n    this.handleUserUploaded();\n  }\n  render() {\n    checkAuth();\n    return (\n      <div className=\"feed-page\">\n        <Helmet>\n          <title>{\"WhichBG? - My Feed\"}</title>\n        </Helmet>\n        <div className=\"feed-likes\">\n          <h1 className=\"feed-title\">Likes</h1>\n          {this.state.userLiked\n            ? this.state.userLiked.map((post) => (\n                <Post\n                  id={`post_${this.state.userLiked.indexOf(post)}`}\n                  post={post}\n                />\n              ))\n            : null}\n        </div>\n        <div className=\"feed-uplode\">\n          <h1 className=\"feed-title\">Upload</h1>\n          {this.state.userUploaded\n            ? this.state.userUploaded.map((post) => (\n                <div style={{ position: \"right\" }}>\n                  <button\n                    id={`delete_post_btn_${this.state.userUploaded.indexOf(\n                      post\n                    )}`}\n                    onClick={() => {\n                      this.handleDelete(post._id);\n                    }}\n                  >\n                    ❌Delete\n                  </button>\n                  <Post\n                    id={`post_${this.state.userUploaded.indexOf(post)}`}\n                    post={post}\n                  />\n                </div>\n              ))\n            : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Feed;\n","import React from \"react\";\nimport { Route, BrowserRouter, Switch, NavLink } from \"react-router-dom\";\nimport \"./App.css\";\nimport swal from \"sweetalert\";\nimport Home from \"./components/Home\";\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\nimport NotFound from \"./components/NotFound\";\nimport axios from \"axios\";\nimport UploadPage from \"./components/UploadPage\";\nimport Comments from \"./components/Comments\";\nimport SignUp from \"./components/SignUp\";\nimport Login from \"./components/Login\";\nimport FooterPage from \"./components/FooterPage\";\nimport Profile from \"./components/Profile\";\nimport Feed from \"./components/feed/Feed\";\n\nclass App extends React.Component {\n  state = {\n    allPosts: [],\n  };\n  getBGS = () => {\n    axios\n      .get(\"/api/v1/posts\")\n      .then((result) => this.setState({ allPosts: result.data }))\n      .catch((err) => console.log(err));\n  };\n\n  handleClick = (e) => {\n    localStorage.removeItem(\"usertoken\");\n    localStorage.removeItem(\"user_id\");\n    localStorage.removeItem(\"user_nickname\");\n    swal({\n      title: \"Logout successfully\",\n      icon: \"success\",\n      showConfirmButton: false,\n      timer: 2500,\n    }).then((window.location.href = \"/\"));\n  };\n\n  componentDidMount() {\n    this.getBGS();\n  }\n\n  render() {\n    // {match} means i only want match from this.props not the whole props *\n    // find here return only the object that matches not an array\n    // if (!this.state.allPosts.length) return <div className=\"App\" />;\n\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          {!localStorage.usertoken ? (\n            <Navbar expand=\"lg\">\n              <Navbar.Brand href=\"/\">WhichBG?</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                  <NavLink className=\"nav-link\" to=\"/\" id=\"navbar_home\">\n                    Home\n                  </NavLink>\n                  <NavLink className=\"nav-link\" to=\"/login\" id=\"navbar_login\">\n                    Login\n                  </NavLink>\n                  <NavLink className=\"nav-link\" to=\"/signup\" id=\"navbar_signup\">\n                    SignUp\n                  </NavLink>\n                </Nav>\n              </Navbar.Collapse>\n            </Navbar>\n          ) : (\n            <Navbar expand=\"lg\">\n              <Navbar.Brand href=\"/\">WhichBG?</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                  <NavLink className=\"nav-link\" to=\"/\" id=\"navbar_home\">\n                    Home\n                  </NavLink>\n                  <NavLink\n                    className=\"nav-link\"\n                    to=\"/profile\"\n                    id=\"navbar_profile\"\n                  >\n                    My Profile\n                  </NavLink>\n                  <NavLink className=\"nav-link\" to=\"/myfeed\" id=\"navbar_myfeed\">\n                    My Feed\n                  </NavLink>\n                  <NavLink className=\"nav-link\" to=\"/upload\" id=\"navbar_upload\">\n                    Upload\n                  </NavLink>\n                  <NavLink\n                    as={Button}\n                    onClick={this.handleClick}\n                    className=\"nav-link\"\n                    to=\"/\"\n                    id=\"navbar_logout\"\n                  >\n                    Logout\n                  </NavLink>\n                </Nav>\n              </Navbar.Collapse>\n            </Navbar>\n          )}\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/upload\" component={UploadPage} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/profile\" component={Profile} />\n            <Route path=\"/myfeed\" component={Feed} />\n\n            <Route\n              path=\"/comments/:id\"\n              render={({ match }) => {\n                if (!this.state.allPosts) return <NotFound />;\n\n                return (\n                  <Comments\n                    post={this.state.allPosts.find(\n                      (post) => post._id === match.params.id\n                    )}\n                  />\n                );\n              }}\n            />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </BrowserRouter>\n        {/* <FooterPage/> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}